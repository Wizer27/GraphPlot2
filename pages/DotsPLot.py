import streamlit as st
import  matplotlib.pyplot as plt
from authorize import autor
from authorize import hash_password
import json



def register_user(username, password):
    if 'users' not in st.session_state:
        st.session_state.users = {}
    st.session_state.users[username] = password
    
    
    
    
if 'logged_in' not in st.session_state:
    st.session_state.logged_in = False
if 'show_register' not in st.session_state:
    st.session_state.show_register = False 
    
       
if 'premium' not in st.session_state:
    st.session_state.premium = False  
        
    
us2 = ''    
if not st.session_state.logged_in:
    # –ü–µ—Ä–µ–∫–ª—é—á–∞—Ç–µ–ª—å –º–µ–∂–¥—É —Ñ–æ—Ä–º–∞–º–∏ –≤—Ö–æ–¥–∞ –∏ —Ä–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏–∏    
        
    if st.session_state.show_register:
        st.title("üìù –†–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏—è")
        new_username = st.text_input("–ù–æ–≤—ã–π –ª–æ–≥–∏–Ω", key="reg_user")
        new_password = st.text_input("–ù–æ–≤—ã–π –ø–∞—Ä–æ–ª—å", type="password", key="reg_pass1")
        confirm_password = st.text_input("–ü–æ–≤—Ç–æ—Ä–∏—Ç–µ –ø–∞—Ä–æ–ª—å", type="password", key="reg_pass2")
        
        if st.button("–ó–∞—Ä–µ–≥–∏—Å—Ç—Ä–∏—Ä–æ–≤–∞—Ç—å—Å—è"):
            with open('/Users/ivanvinogradov/GraphPlot2/users.json','r') as file:
                d = json.load(file)
            # –ø—Ä–æ–≤–µ—Ä—è—é –µ—Å–ª—Ç—å –ª–∏ —Ç–∞–∫–æ–π –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–± –∏–ª–∏ –Ω–µ—Ç    
            if new_username in d:
                st.error('This username is already taken')
            else:   
                if not new_username or not new_password:
                    st.error("–ó–∞–ø–æ–ª–Ω–∏—Ç–µ –≤—Å–µ –ø–æ–ª—è")
                elif new_password != confirm_password:
                    st.error("–ü–∞—Ä–æ–ª–∏ –Ω–µ —Å–æ–≤–ø–∞–¥–∞—é—Ç!")
                else:
                    register_user(new_username, new_password)
                    st.success("–†–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏—è —É—Å–ø–µ—à–Ω–∞! –ú–æ–∂–µ—Ç–µ –≤–æ–π—Ç–∏")
                    st.session_state.show_register = False
                    with open('/Users/ivanvinogradov/GraphPlot2/users.json','r', encoding="utf-8") as file:
                        data = json.load(file)
                        
                    data[new_username] = hash_password(new_password) # –∑–∞–ø–∏—Å—ã–≤–∞–µ–º –Ω–æ–≤–æ–≥–æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è 
                    
                    
                    
                    # –ó–∞–ø–∏—Å—å –≤ –±–∞–∑—É –Ω–æ–≤–æ–≥–æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è (—É–∂–µ –æ–±–Ω–æ–≤–ª—è–µ–º –±–∞–∑—É)
                    with open('/Users/ivanvinogradov/GraphPlot2/users.json','w', encoding="utf-8") as file:
                        json.dump(data,file,indent=4, ensure_ascii=False)
                        
                        
                        
                    
        if st.button("‚Üê –ù–∞–∑–∞–¥ –∫ –≤—Ö–æ–¥—É"):
            st.session_state.show_register = False
            st.rerun()
    
    else:
        # –§–æ—Ä–º–∞ –≤—Ö–æ–¥–∞
        st.title("üîí –í—Ö–æ–¥ –≤ —Å–∏—Å—Ç–µ–º—É")
        username = st.text_input("–õ–æ–≥–∏–Ω")
        password = st.text_input("–ü–∞—Ä–æ–ª—å", type="password")
        us2 = username
        if st.button("–í–æ–π—Ç–∏"):
            # –ü—Ä–æ–≤–µ—Ä—è—é –Ω–∞ –ø–æ–¥–ø–∏—Å–∫—É
            if autor(username, password):
                st.session_state.logged_in = True
                st.session_state.username = username
                with open('/Users/ivanvinogradov/GraphPlot2/premium.json','r') as file:
                    n = json.load(file)
                if username in n:
                    if n[username] == "Premium":
                        st.session_state.premium = True
                    st.rerun()
            else:
                st.error("–ù–µ–≤–µ—Ä–Ω—ã–µ –¥–∞–Ω–Ω—ã–µ")
        if st.button("–°–æ–∑–¥–∞—Ç—å –Ω–æ–≤—ã–π –∞–∫–∫–∞—É–Ω—Ç"):
            st.session_state.show_register = True
            st.rerun()
    
    st.stop()
# –û—Å–Ω–æ–≤–Ω–æ–π –∏–Ω—Ç–µ—Ä—Ñ–µ–π—Å –ø–æ—Å–ª–µ –∞–≤—Ç–æ—Ä–∏–∑–∞—Ü–∏–∏
st.success(f"‚úÖ –î–æ–±—Ä–æ –ø–æ–∂–∞–ª–æ–≤–∞—Ç—å, {st.session_state.username}!")       


if not st.session_state.premium: 
        st.title('DotsPlot')
        st.error('This is a Premium function')
        st.stop()
        
fig = plt.figure()
#x = [1, 2, 3, 4]
#y = [10, 20, 25, 30]
plt.title("–î–∏–∞–≥—Ä–∞–º–º–∞ —Ä–∞—Å—Å–µ—è–Ω–∏—è")
xs = []
ys = []
with st.sidebar:
    grid = st.checkbox('Grid')
    count = st.number_input('How many dots?',min_value=1,max_value = 50)
    for dot in range(count + 1):
        x = st.text_input(f'Dotx {dot}',key = f"Dotx {dot}")
        y = st.text_input(f'Doty {dot}',key = f"Doty {dot}")
        if x != '':  
            xs.append(int(x))
        if y != '':        
            ys.append(int(y))
print("xs:", xs)
print("ys: ", ys)    
if grid:
    plt.grid()    
if len(ys) == len(xs):    
    plt.scatter(xs, ys)
else:
    st.error("Not enough inputs !")    
st.pyplot(fig)



